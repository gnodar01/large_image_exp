notebook format: 4.0
metadata (known keys):
  kernelspec:
    display_name: hack
    language: python
    name: python3
  language_info:
    codemirror_mode:
      name: ipython
      version: 3
    file_extension: .py
    mimetype: text/x-python
    name: python
    nbconvert_exporter: python
    pygments_lexer: ipython3
    version: 3.9.21
metadata (unknown keys):
  colab:
    authorship_tag: ABX9TyPpHsOncEgHvOO5g74jPNLc
    collapsed_sections:
      item[0]: lFbayfk_BB6t
      item[1]: bZ_LwnwGKC3z
      item[2]: bW0BP9RcKhLy
      item[3]: 2LSaF2qbKv9s
      item[4]: odm79o8LLcPP
      item[5]: VHiMi1F0wkMU
      item[6]: auqx9D-f-f1S
    provenance:
      []
code cell 0:
  execution_count: 1
  source:
    import os, psutil, json, io
    from math import log
    from skimage import io as skio
    import tifffile
    import numpy as np
    import scipy as sp
code cell 1:
  execution_count: 2
  source:
    process = psutil.Process()
code cell 2:
  execution_count: 3
  source:
    to_unit = lambda val, unit: val / unit
    memory_usage = lambda unit: to_unit(process.memory_info().rss, unit)
    B = lambda: memory_usage(1)
    GB = lambda: memory_usage(1e+9)
    MB = lambda: memory_usage(1e+6)
    KB = lambda: memory_usage(1e+3)
    GiB = lambda: memory_usage(2**30)
    MiB = lambda: memory_usage(2**20)
    KiB = lambda: memory_usage(2**10)
    toGB = lambda val: to_unit(val, 1e+9)
    toMB = lambda val: to_unit(val, 1e+6)
    toKB = lambda val: to_unit(val, 1e+3)
    toGiB = lambda val: to_unit(val, 2**30)
    toMiB = lambda val: to_unit(val, 2**20)
    toKiB = lambda val: to_unit(val, 2**10)
    sp = lambda val: f"{val:_}" if type(val) == type(1) or type(val) == type(1.1) else val
    spmap = lambda val: tuple(map(lambda x: sp(x), val)) if type(val) == type((1,1)) else list(map(lambda x: sp(x), val)) if type(val) == type([1,1]) else val
markdown cell 3:
  source:
    ## Inspect TIFFS
markdown cell 4:
  source:
    `454MP.tif`
    * [source](https://forum.image.sc/t/image-analysis-on-muscle-fiber-type/86992/9)
    * W: $22,260$
    * H: $20,410$
    * Num pixels ($H \times W$): $454,326,600$
      * $454$ Mega Pixels (MP)
      * $10^{8.65}$
      * $2^{28.76}$
    * num channels: $3$
    * bit depth: $8$
    * file size: $1.36$ GB
    
    `1panel.tif`
    * [source](https://forum.image.sc/t/getting-an-error-non-negative-array-size-exception-while-loading-image-in-fiji/89618/4)
    * W: $23,785$
    * H: $7,401$
    * Num pixels ($H \times W$): $176,032,785$
      * $176$ Mega Pixels (MP)
      * $10^{8.25}$
      * $2^{27.39}$
    * num channels: $3$
    * bit depth: $16$
    * file size: $1.06$ GB
    
    `2panel.tif`
    * [source](https://forum.image.sc/t/getting-an-error-non-negative-array-size-exception-while-loading-image-in-fiji/89618/4)
    * W: $8,598$
    * H: $47,275$
    * Num pixels ($H \times W$): $406,470,450$
      * $406$ Mega Pixels (MP)
      * $10^{8.61}$
      * $2^{28.6}$
    * num channels: $3$
    * bit depth: $16$
    * file size: $2.44$ GB
    
    `a.ome.tif`
    * [download](https://drive.google.com/drive/folders/1NcduuhRtl_BpDIH6VIc-E1aSeN1KomRA)
    * [source](https://forum.image.sc/t/czi-multiplex-cyclic-if-registration-warpy/83788/2)
    * W: $33,372$
    * H: $31,428$
    * Num pixels ($H \times W$): $1,048,815,216$
      * $1.05$ Giga Pixels (GP)
      * $10^{9.02}$
      * $2^{29.97}$
    * num channels: $3$
    * bit depth: $16$
    * file size: $2.52$ GB
    * mem size: $7.41$ GB
    
    `b.ome.tif`
    * [download](https://drive.google.com/drive/folders/1NcduuhRtl_BpDIH6VIc-E1aSeN1KomRA)
    * [source](https://forum.image.sc/t/czi-multiplex-cyclic-if-registration-warpy/83788/2)
    
    `E02b_Tonsil_Full_P94_A31_C141_LJI_Orion12_ASCM@20230606_220006_885831.ome.tiff`
code cell 5:
  execution_count: 4
  source:
    GB()
  outputs:
    output 0:
      output_type: execute_result
      execution_count: 4
      data:
        text/plain: 0.09003008
code cell 6:
  execution_count: 9
  metadata (unknown keys):
    id: I44oVEepefiD
    notebookRunGroups:
      groupValue: 
  source:
    # FNAME = '454MP.tif'
    # FNAME = '1Panel.tif'
    # FNAME = '2Panels.tif'
    # FNAME = 'a.ome.tif'
    # FNAME = 'b.ome.tif'
    # FNAME = '01_POS002_D.tiff'
    # FNAME = "../data/img.tif"
    # FNAME = "/Users/ngogober/Downloads/_001.nd2_DAPI_SUM.tif - Copy.tif"
    FNAME = "../large_images/E02b_Tonsil_Full_P94_A31_C141_LJI_Orion12_ASCM@20230606_220006_885831.ome.tiff"
code cell 7:
  execution_count: 10
  source:
    GB()
  outputs:
    output 0:
      output_type: execute_result
      execution_count: 10
      data:
        text/plain: 0.09515008
markdown cell 8:
  source:
    [EXIF Tags](https://exiftool.org/TagNames/EXIF.html): "Exchangeable Image File Format", formatted according to [`TIFF` spec](https://www.awaresystems.be/imaging/tiff.html), but used in [many others](https://exiftool.org/TagNames/) like `PNG`, `JPG`, etc. Tags not specified by `TIFF` may co-exist with EXIF tags in some images (e.g. scientific images with extra metadata). There are apparently [some tags](https://www.awaresystems.be/imaging/tiff/tifftags.html) in `TIFF` that are not EXIF.
    
    The `InterColorProfile` tag on `1Panel.tif` is [interesting](http://www.andrewjanowczyk.com/application-of-icc-profiles-to-digital-pathology-images/), and describes applying the ICC profile in the tif to the src image to get the color corrected version displayed.
code cell 9:
  execution_count: 11
  source:
    metadata = dict()
    
    with tifffile.TiffFile(FNAME) as tif:
        metadata['byteorder'] = tif.byteorder
        metadata['num_pages'] = len(tif.pages)
        metadata['num_series'] = len(tif.series)
    
        is_thing_list = [x for x in dir(tif) if x.startswith('is_')]
        has_metadata_list = [x for x in dir(tif) if x.endswith('_metadata')]
        metadata['kinds'] = list()
        metadata['metadatas'] = dict()
        for is_thing in is_thing_list:
            is_thing_val = getattr(tif, is_thing)
            if is_thing_val:
                metadata['kinds'].append(is_thing[3:])
        for md in has_metadata_list:
            md_val = getattr(tif, md)
            if md_val:
                metadata['metadatas'][md[:-9]] = md_val
    
        if metadata['num_series'] > 0:
            metadata['series'] = list()
            for i, series in enumerate(tif.series):
                metadata['series'].append(dict())
                metadata['series'][i]['axes'] = tif.series[i].axes
                if hasattr(tif.series[i], '_axes_expanded'):
                    metadata['series'][i]['axes_expanded'] = tif.series[i]._axes_expanded
                if hasattr(tif.series[i], 'axes_expanded'):
                    metadata['series'][i]['axes_expanded'] = tif.series[i]._axes_expanded
                metadata['series'][i]['dtype'] = str(tif.series[i].dtype)
                metadata['series'][i]['is_multifile'] = tif.series[i].is_multifile
                metadata['series'][i]['is_pyramidal'] = tif.series[i].is_pyramidal
                metadata['series'][i]['kind'] = tif.series[i].kind
                metadata['series'][i]['name'] = tif.series[i].name
                metadata['series'][i]['shape'] = spmap(tif.series[i].shape)
                if hasattr(tif.series[i], '_shape_expanded'):
                    metadata['series'][i]['shape_expanded'] = spmap(tif.series[i]._shape_expanded)
                metadata['series'][i]['size'] = sp(tif.series[i].size)
    
        MAX_PAGES = 10
        metadata['pages'] = list()
        for i, page in enumerate(tif.pages):
            if i > MAX_PAGES:
                break
            metadata['pages'].append(dict())
            metadata['pages'][i]['axes'] = hasattr(tif.pages[i],'axes') and tif.pages[i].axes or 'undefined'
            metadata['pages'][i]['chunked'] = hasattr(tif.pages[i],'chunked') and spmap(tif.pages[i].chunked) or 'undefined'
            metadata['pages'][i]['chunks'] = hasattr(tif.pages[i],'chunks') and spmap(tif.pages[i].chunks) or 'undefined'
            metadata['pages'][i]['compression'] = hasattr(tif.pages[i],'compression') and str(tif.pages[i].compression) or 'undefined'
            if hasattr(tif.pages[i],'colormap'):
                metadata['pages'][i]['colormap'] = dict()
                if hasattr(tif.pages[i].colormap, 'ndim'):
                    metadata['pages'][i]['colormap']['ndim'] = tif.pages[i].colormap.ndim
                else:
                    metadata['pages'][i]['colormap']['ndim'] = 'undefined'
                if hasattr(tif.pages[i].colormap, 'nbytes'):
                    metadata['pages'][i]['colormap']['nbytes'] = tif.pages[i].colormap.nbytes
                else:
                    metadata['pages'][i]['colormap']['nbytes'] = 'undefined'
                if hasattr(tif.pages[i].colormap, 'shape'):
                    metadata['pages'][i]['shape'] = spmap(tif.pages[i].colormap.shape)
                else:
                    metadata['pages'][i]['shape'] = 'undefined'
            metadata['pages'][i]['dtype'] = hasattr(tif.pages[i],'dtype') and str(tif.pages[i].dtype) or 'undefined'
            metadata['pages'][i]['imagedepth'] = hasattr(tif.pages[i],'imagedepth') and tif.pages[i].imagedepth or 'undefined'
            metadata['pages'][i]['imagelength'] = hasattr(tif.pages[i],'imagelength') and sp(tif.pages[i].imagelength) or 'undefined'
            metadata['pages'][i]['imagewidth'] = hasattr(tif.pages[i],'imagewidth') and sp(tif.pages[i].imagewidth) or 'undefined'
            metadata['pages'][i]['nbytes'] = hasattr(tif.pages[i],'nbytes') and sp(tif.pages[i].nbytes) or 'undefined'
            metadata['pages'][i]['shape'] = hasattr(tif.pages[i],'shape') and spmap(tif.pages[i].shape) or 'undefined'
    
            tag_keys = hasattr(tif.pages[i],'tags') and tif.pages[i].tags.keys() or []
            metadata['pages'][i]['tags'] = dict()
            for key in tag_keys:
                metadata['pages'][i]['tags'][key] = dict()
                metadata['pages'][i]['tags'][key]['code'] = tif.pages[i].tags[key].code
                metadata['pages'][i]['tags'][key]['count'] = tif.pages[i].tags[key].count
                metadata['pages'][i]['tags'][key]['dtype_name'] = tif.pages[i].tags[key].dtype_name
                metadata['pages'][i]['tags'][key]['name'] = tif.pages[i].tags[key].name
                metadata['pages'][i]['tags'][key]['dataformat'] = tif.pages[i].tags[key].dataformat
                metadata['pages'][i]['tags'][key]['valuebytecount'] = tif.pages[i].tags[key].valuebytecount
                val = tif.pages[i].tags[key].value
                if tif.pages[i].tags[key].valuebytecount < 100:
                    if type(val) == type(1):
                        metadata['pages'][i]['tags'][key]['value'] = val
                    elif type(val) == type(1.0):
                        metadata['pages'][i]['tags'][key]['value'] = val
                    else:
                        metadata['pages'][i]['tags'][key]['value'] = str(val)
                else:
                    metadata['pages'][i]['tags'][key]['value'] = "LOTS OF STUFF"
    del tif
code cell 10:
  execution_count: 21
  source:
    metadata
  outputs:
    output 0:
      output_type: execute_result
      execution_count: 21
      data:
        text/plain:
          {'byteorder': '<',
           'num_pages': 19,
           'num_series': 1,
           'kinds': ['bigtiff', 'ome'],
           'metadatas': {'ome': '<?xml version="1.0" encoding="UTF-8"?><OME xmlns="http://www.openmicroscopy.org/Schemas/OME/2016-06" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.openmicroscopy.org/Schemas/OME/2016-06 http://www.openmicroscopy.org/Schemas/OME/2016-06/ome.xsd"><Instrument ID="Instrument:0"><Objective ID="Objective:0" NominalMagnification="20.0"/></Instrument><Image ID="Image:0"><InstrumentRef ID="Instrument:0"/><ObjectiveSettings ID="Objective:0"/><Pixels BigEndian="false" DimensionOrder="XYZCT" ID="Pixels:0" PhysicalSizeX="0.325" PhysicalSizeXUnit="µm" PhysicalSizeY="0.325" PhysicalSizeYUnit="µm" PhysicalSizeZ="1.0" PhysicalSizeZUnit="µm" SizeC="19" SizeT="1" SizeX="55294" SizeY="26523" SizeZ="1" Type="uint16"><Channel ID="Channel:0" Name="01_Hoechst" SamplesPerPixel="1"><LightPath/></Channel><Channel ID="Channel:1" Name="02_AF1" SamplesPerPixel="1"><LightPath/></Channel><Channel ID="Channel:2" Name="03_CD31_Argo515" SamplesPerPixel="1"><LightPath/></Channel><Channel ID="Channel:3" Name="04_CD11c_Argo555L" SamplesPerPixel="1"><LightPath/></Channel><Channel ID="Channel:4" Name="05_CD68_Argo535" SamplesPerPixel="1"><LightPath/></Channel><Channel ID="Channel:5" Name="06_CD163_Argo580L" SamplesPerPixel="1"><LightPath/></Channel><Channel ID="Channel:6" Name="07_CD20_Argo660L" SamplesPerPixel="1"><LightPath/></Channel><Channel ID="Channel:7" Name="08_CD4_Argo572" SamplesPerPixel="1"><LightPath/></Channel><Channel ID="Channel:8" Name="09_CD8a_Argo602" SamplesPerPixel="1"><LightPath/></Channel><Channel ID="Channel:9" Name="10_CD45RO_Argo624" SamplesPerPixel="1"><LightPath/></Channel><Channel ID="Channel:10" Name="11_PD-L1_Argo662" SamplesPerPixel="1"><LightPath/></Channel><Channel ID="Channel:11" Name="12_FOXP3_Argo686" SamplesPerPixel="1"><LightPath/></Channel><Channel ID="Channel:12" Name="13_LAG3_Argo730" SamplesPerPixel="1"><LightPath/></Channel><Channel ID="Channel:13" Name="14_PD-1_Argo760" SamplesPerPixel="1"><LightPath/></Channel><Channel ID="Channel:14" Name="15_Ki-67_Argo784" SamplesPerPixel="1"><LightPath/></Channel><Channel ID="Channel:15" Name="16_CD45_Argo810" SamplesPerPixel="1"><LightPath/></Channel><Channel ID="Channel:16" Name="17_S100_Argo845" SamplesPerPixel="1"><LightPath/></Channel><Channel ID="Channel:17" Name="18_Blank_Argo874" SamplesPerPixel="1"><LightPath/></Channel><Channel ID="Channel:18" Name="19_Blank_Argo890" SamplesPerPixel="1"><LightPath/></Channel><Plane TheC="0" TheT="0" TheZ="0"/><Plane TheC="1" TheT="0" TheZ="0"/><Plane TheC="2" TheT="0" TheZ="0"/><Plane TheC="3" TheT="0" TheZ="0"/><Plane TheC="4" TheT="0" TheZ="0"/><Plane TheC="5" TheT="0" TheZ="0"/><Plane TheC="6" TheT="0" TheZ="0"/><Plane TheC="7" TheT="0" TheZ="0"/><Plane TheC="8" TheT="0" TheZ="0"/><Plane TheC="9" TheT="0" TheZ="0"/><Plane TheC="10" TheT="0" TheZ="0"/><Plane TheC="11" TheT="0" TheZ="0"/><Plane TheC="12" TheT="0" TheZ="0"/><Plane TheC="13" TheT="0" TheZ="0"/><Plane TheC="14" TheT="0" TheZ="0"/><Plane TheC="15" TheT="0" TheZ="0"/><Plane TheC="16" TheT="0" TheZ="0"/><Plane TheC="17" TheT="0" TheZ="0"/><Plane TheC="18" TheT="0" TheZ="0"/></Pixels><AnnotationRef ID="Annotation:Stitcher:0"/></Image><StructuredAnnotations><MapAnnotation ID="Annotation:Stitcher:0" Namespace="com.glencoesoftware.stitcher.minmax"><Value><M K="Channel9:Max">57081.0</M><M K="Channel3:Min">0.0</M><M K="Channel2:Min">0.0</M><M K="Channel4:Max">41560.0</M><M K="Channel8:Max">53735.0</M><M K="Channel17:Min">0.0</M><M K="Channel7:Min">0.0</M><M K="Channel12:Max">61847.0</M><M K="Channel11:Min">0.0</M><M K="Channel18:Max">49695.0</M><M K="Channel15:Min">0.0</M><M K="Channel10:Min">0.0</M><M K="Channel3:Max">54082.0</M><M K="Channel4:Min">0.0</M><M K="Channel8:Min">0.0</M><M K="Channel17:Max">36593.0</M><M K="Channel2:Max">57938.0</M><M K="Channel7:Max">62647.0</M><M K="Channel18:Min">0.0</M><M K="Channel13:Max">36165.0</M><M K="Channel14:Min">0.0</M><M K="Channel5:Min">0.0</M><M K="Channel0:Min">0.0</M><M K="Channel6:Max">61855.0</M><M K="Channel10:Max">57008.0</M><M K="Channel1:Max">50372.0</M><M K="Channel9:Min">0.0</M><M K="Channel13:Min">0.0</M><M K="Channel16:Max">62016.0</M><M K="Channel14:Max">30824.0</M><M K="Channel6:Min">0.0</M><M K="Channel0:Max">35303.0</M><M K="Channel1:Min">34.0</M><M K="Channel5:Max">48345.0</M><M K="Channel12:Min">0.0</M><M K="Channel11:Max">49814.0</M><M K="Channel16:Min">0.0</M><M K="Channel15:Max">33235.0</M></Value></MapAnnotation><MapAnnotation ID="Annotation:Resolution:0" Namespace="openmicroscopy.org/PyramidResolution"><Value><M K="1">27647 13261</M><M K="2">13823 6630</M><M K="3">6911 3315</M><M K="4">3455 1657</M><M K="5">1727 828</M><M K="6">863 414</M></Value></MapAnnotation></StructuredAnnotations></OME>'},
           'series': [{'axes': 'IYX',
             'dtype': 'uint16',
             'is_multifile': False,
             'is_pyramidal': True,
             'kind': 'generic',
             'name': '',
             'shape': ('19', '26_523', '55_294'),
             'size': '27_864_692_478'}],
           'pages': [{'axes': 'YX',
             'chunked': ('26', '54'),
             'chunks': ('1_024', '1_024'),
             'compression': 'COMPRESSION.NONE',
             'colormap': {'ndim': 'undefined', 'nbytes': 'undefined'},
             'shape': ('26_523', '55_294'),
             'dtype': 'uint16',
             'imagedepth': 1,
             'imagelength': '26_523',
             'imagewidth': '55_294',
             'nbytes': '2_933_125_524',
             'tags': {256: {'code': 256,
               'count': 1,
               'dtype_name': 'LONG8',
               'name': 'ImageWidth',
               'dataformat': '1Q',
               'valuebytecount': 8,
               'value': 55294},
              257: {'code': 257,
               'count': 1,
               'dtype_name': 'LONG8',
               'name': 'ImageLength',
               'dataformat': '1Q',
               'valuebytecount': 8,
               'value': 26523},
              258: {'code': 258,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'BitsPerSample',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 16},
              259: {'code': 259,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'Compression',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'COMPRESSION.NONE'},
              262: {'code': 262,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'PhotometricInterpretation',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'PHOTOMETRIC.MINISBLACK'},
              270: {'code': 270,
               'count': 4730,
               'dtype_name': 'ASCII',
               'name': 'ImageDescription',
               'dataformat': '1s',
               'valuebytecount': 4730,
               'value': 'LOTS OF STUFF'},
              277: {'code': 277,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'SamplesPerPixel',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 1},
              282: {'code': 282,
               'count': 1,
               'dtype_name': 'RATIONAL',
               'name': 'XResolution',
               'dataformat': '2I',
               'valuebytecount': 8,
               'value': '(30769230, 1000)'},
              283: {'code': 283,
               'count': 1,
               'dtype_name': 'RATIONAL',
               'name': 'YResolution',
               'dataformat': '2I',
               'valuebytecount': 8,
               'value': '(30769230, 1000)'},
              284: {'code': 284,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'PlanarConfiguration',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'PLANARCONFIG.CONTIG'},
              296: {'code': 296,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'ResolutionUnit',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'RESUNIT.CENTIMETER'},
              305: {'code': 305,
               'count': 22,
               'dtype_name': 'ASCII',
               'name': 'Software',
               'dataformat': '1s',
               'valuebytecount': 22,
               'value': 'OME Bio-Formats 6.3.1'},
              322: {'code': 322,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'TileWidth',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 1024},
              323: {'code': 323,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'TileLength',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 1024},
              324: {'code': 324,
               'count': 1404,
               'dtype_name': 'LONG8',
               'name': 'TileOffsets',
               'dataformat': '1Q',
               'valuebytecount': 11232,
               'value': 'LOTS OF STUFF'},
              325: {'code': 325,
               'count': 1404,
               'dtype_name': 'LONG8',
               'name': 'TileByteCounts',
               'dataformat': '1Q',
               'valuebytecount': 11232,
               'value': 'LOTS OF STUFF'},
              330: {'code': 330,
               'count': 6,
               'dtype_name': 'LONG8',
               'name': 'SubIFDs',
               'dataformat': '1Q',
               'valuebytecount': 48,
               'value': '(69929972564, 73834982714, 74950703792, 75269485830, 75349186460, 75389039378)'},
              339: {'code': 339,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'SampleFormat',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'SAMPLEFORMAT.UINT'}}},
            {'axes': 'YX',
             'chunked': ('26', '54'),
             'chunks': ('1_024', '1_024'),
             'compression': 'COMPRESSION.NONE',
             'colormap': {'ndim': 'undefined', 'nbytes': 'undefined'},
             'shape': ('26_523', '55_294'),
             'dtype': 'uint16',
             'imagedepth': 1,
             'imagelength': '26_523',
             'imagewidth': '55_294',
             'nbytes': '2_933_125_524',
             'tags': {256: {'code': 256,
               'count': 1,
               'dtype_name': 'LONG8',
               'name': 'ImageWidth',
               'dataformat': '1Q',
               'valuebytecount': 8,
               'value': 55294},
              257: {'code': 257,
               'count': 1,
               'dtype_name': 'LONG8',
               'name': 'ImageLength',
               'dataformat': '1Q',
               'valuebytecount': 8,
               'value': 26523},
              258: {'code': 258,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'BitsPerSample',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 16},
              259: {'code': 259,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'Compression',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'COMPRESSION.NONE'},
              262: {'code': 262,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'PhotometricInterpretation',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'PHOTOMETRIC.MINISBLACK'},
              270: {'code': 270,
               'count': 1,
               'dtype_name': 'ASCII',
               'name': 'ImageDescription',
               'dataformat': '1s',
               'valuebytecount': 1,
               'value': ''},
              277: {'code': 277,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'SamplesPerPixel',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 1},
              282: {'code': 282,
               'count': 1,
               'dtype_name': 'RATIONAL',
               'name': 'XResolution',
               'dataformat': '2I',
               'valuebytecount': 8,
               'value': '(30769230, 1000)'},
              283: {'code': 283,
               'count': 1,
               'dtype_name': 'RATIONAL',
               'name': 'YResolution',
               'dataformat': '2I',
               'valuebytecount': 8,
               'value': '(30769230, 1000)'},
              284: {'code': 284,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'PlanarConfiguration',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'PLANARCONFIG.CONTIG'},
              296: {'code': 296,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'ResolutionUnit',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'RESUNIT.CENTIMETER'},
              305: {'code': 305,
               'count': 22,
               'dtype_name': 'ASCII',
               'name': 'Software',
               'dataformat': '1s',
               'valuebytecount': 22,
               'value': 'OME Bio-Formats 6.3.1'},
              322: {'code': 322,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'TileWidth',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 1024},
              323: {'code': 323,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'TileLength',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 1024},
              324: {'code': 324,
               'count': 1404,
               'dtype_name': 'LONG8',
               'name': 'TileOffsets',
               'dataformat': '1Q',
               'valuebytecount': 11232,
               'value': 'LOTS OF STUFF'},
              325: {'code': 325,
               'count': 1404,
               'dtype_name': 'LONG8',
               'name': 'TileByteCounts',
               'dataformat': '1Q',
               'valuebytecount': 11232,
               'value': 'LOTS OF STUFF'},
              330: {'code': 330,
               'count': 6,
               'dtype_name': 'LONG8',
               'name': 'SubIFDs',
               'dataformat': '1Q',
               'valuebytecount': 48,
               'value': '(69929978518, 73834984620, 74950704578, 75269486296, 75349186830, 75389039716)'},
              339: {'code': 339,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'SampleFormat',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'SAMPLEFORMAT.UINT'}}},
            {'axes': 'YX',
             'chunked': ('26', '54'),
             'chunks': ('1_024', '1_024'),
             'compression': 'COMPRESSION.NONE',
             'colormap': {'ndim': 'undefined', 'nbytes': 'undefined'},
             'shape': ('26_523', '55_294'),
             'dtype': 'uint16',
             'imagedepth': 1,
             'imagelength': '26_523',
             'imagewidth': '55_294',
             'nbytes': '2_933_125_524',
             'tags': {256: {'code': 256,
               'count': 1,
               'dtype_name': 'LONG8',
               'name': 'ImageWidth',
               'dataformat': '1Q',
               'valuebytecount': 8,
               'value': 55294},
              257: {'code': 257,
               'count': 1,
               'dtype_name': 'LONG8',
               'name': 'ImageLength',
               'dataformat': '1Q',
               'valuebytecount': 8,
               'value': 26523},
              258: {'code': 258,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'BitsPerSample',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 16},
              259: {'code': 259,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'Compression',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'COMPRESSION.NONE'},
              262: {'code': 262,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'PhotometricInterpretation',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'PHOTOMETRIC.MINISBLACK'},
              270: {'code': 270,
               'count': 1,
               'dtype_name': 'ASCII',
               'name': 'ImageDescription',
               'dataformat': '1s',
               'valuebytecount': 1,
               'value': ''},
              277: {'code': 277,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'SamplesPerPixel',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 1},
              282: {'code': 282,
               'count': 1,
               'dtype_name': 'RATIONAL',
               'name': 'XResolution',
               'dataformat': '2I',
               'valuebytecount': 8,
               'value': '(30769230, 1000)'},
              283: {'code': 283,
               'count': 1,
               'dtype_name': 'RATIONAL',
               'name': 'YResolution',
               'dataformat': '2I',
               'valuebytecount': 8,
               'value': '(30769230, 1000)'},
              284: {'code': 284,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'PlanarConfiguration',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'PLANARCONFIG.CONTIG'},
              296: {'code': 296,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'ResolutionUnit',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'RESUNIT.CENTIMETER'},
              305: {'code': 305,
               'count': 22,
               'dtype_name': 'ASCII',
               'name': 'Software',
               'dataformat': '1s',
               'valuebytecount': 22,
               'value': 'OME Bio-Formats 6.3.1'},
              322: {'code': 322,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'TileWidth',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 1024},
              323: {'code': 323,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'TileLength',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 1024},
              324: {'code': 324,
               'count': 1404,
               'dtype_name': 'LONG8',
               'name': 'TileOffsets',
               'dataformat': '1Q',
               'valuebytecount': 11232,
               'value': 'LOTS OF STUFF'},
              325: {'code': 325,
               'count': 1404,
               'dtype_name': 'LONG8',
               'name': 'TileByteCounts',
               'dataformat': '1Q',
               'valuebytecount': 11232,
               'value': 'LOTS OF STUFF'},
              330: {'code': 330,
               'count': 6,
               'dtype_name': 'LONG8',
               'name': 'SubIFDs',
               'dataformat': '1Q',
               'valuebytecount': 48,
               'value': '(69929984472, 73834986526, 74950705364, 75269486762, 75349187200, 75389040054)'},
              339: {'code': 339,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'SampleFormat',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'SAMPLEFORMAT.UINT'}}},
            {'axes': 'YX',
             'chunked': ('26', '54'),
             'chunks': ('1_024', '1_024'),
             'compression': 'COMPRESSION.NONE',
             'colormap': {'ndim': 'undefined', 'nbytes': 'undefined'},
             'shape': ('26_523', '55_294'),
             'dtype': 'uint16',
             'imagedepth': 1,
             'imagelength': '26_523',
             'imagewidth': '55_294',
             'nbytes': '2_933_125_524',
             'tags': {256: {'code': 256,
               'count': 1,
               'dtype_name': 'LONG8',
               'name': 'ImageWidth',
               'dataformat': '1Q',
               'valuebytecount': 8,
               'value': 55294},
              257: {'code': 257,
               'count': 1,
               'dtype_name': 'LONG8',
               'name': 'ImageLength',
               'dataformat': '1Q',
               'valuebytecount': 8,
               'value': 26523},
              258: {'code': 258,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'BitsPerSample',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 16},
              259: {'code': 259,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'Compression',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'COMPRESSION.NONE'},
              262: {'code': 262,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'PhotometricInterpretation',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'PHOTOMETRIC.MINISBLACK'},
              270: {'code': 270,
               'count': 1,
               'dtype_name': 'ASCII',
               'name': 'ImageDescription',
               'dataformat': '1s',
               'valuebytecount': 1,
               'value': ''},
              277: {'code': 277,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'SamplesPerPixel',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 1},
              282: {'code': 282,
               'count': 1,
               'dtype_name': 'RATIONAL',
               'name': 'XResolution',
               'dataformat': '2I',
               'valuebytecount': 8,
               'value': '(30769230, 1000)'},
              283: {'code': 283,
               'count': 1,
               'dtype_name': 'RATIONAL',
               'name': 'YResolution',
               'dataformat': '2I',
               'valuebytecount': 8,
               'value': '(30769230, 1000)'},
              284: {'code': 284,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'PlanarConfiguration',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'PLANARCONFIG.CONTIG'},
              296: {'code': 296,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'ResolutionUnit',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'RESUNIT.CENTIMETER'},
              305: {'code': 305,
               'count': 22,
               'dtype_name': 'ASCII',
               'name': 'Software',
               'dataformat': '1s',
               'valuebytecount': 22,
               'value': 'OME Bio-Formats 6.3.1'},
              322: {'code': 322,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'TileWidth',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 1024},
              323: {'code': 323,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'TileLength',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 1024},
              324: {'code': 324,
               'count': 1404,
               'dtype_name': 'LONG8',
               'name': 'TileOffsets',
               'dataformat': '1Q',
               'valuebytecount': 11232,
               'value': 'LOTS OF STUFF'},
              325: {'code': 325,
               'count': 1404,
               'dtype_name': 'LONG8',
               'name': 'TileByteCounts',
               'dataformat': '1Q',
               'valuebytecount': 11232,
               'value': 'LOTS OF STUFF'},
              330: {'code': 330,
               'count': 6,
               'dtype_name': 'LONG8',
               'name': 'SubIFDs',
               'dataformat': '1Q',
               'valuebytecount': 48,
               'value': '(69929990426, 73834988432, 74950706150, 75269487228, 75349187570, 75389040392)'},
              339: {'code': 339,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'SampleFormat',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'SAMPLEFORMAT.UINT'}}},
            {'axes': 'YX',
             'chunked': ('26', '54'),
             'chunks': ('1_024', '1_024'),
             'compression': 'COMPRESSION.NONE',
             'colormap': {'ndim': 'undefined', 'nbytes': 'undefined'},
             'shape': ('26_523', '55_294'),
             'dtype': 'uint16',
             'imagedepth': 1,
             'imagelength': '26_523',
             'imagewidth': '55_294',
             'nbytes': '2_933_125_524',
             'tags': {256: {'code': 256,
               'count': 1,
               'dtype_name': 'LONG8',
               'name': 'ImageWidth',
               'dataformat': '1Q',
               'valuebytecount': 8,
               'value': 55294},
              257: {'code': 257,
               'count': 1,
               'dtype_name': 'LONG8',
               'name': 'ImageLength',
               'dataformat': '1Q',
               'valuebytecount': 8,
               'value': 26523},
              258: {'code': 258,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'BitsPerSample',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 16},
              259: {'code': 259,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'Compression',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'COMPRESSION.NONE'},
              262: {'code': 262,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'PhotometricInterpretation',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'PHOTOMETRIC.MINISBLACK'},
              270: {'code': 270,
               'count': 1,
               'dtype_name': 'ASCII',
               'name': 'ImageDescription',
               'dataformat': '1s',
               'valuebytecount': 1,
               'value': ''},
              277: {'code': 277,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'SamplesPerPixel',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 1},
              282: {'code': 282,
               'count': 1,
               'dtype_name': 'RATIONAL',
               'name': 'XResolution',
               'dataformat': '2I',
               'valuebytecount': 8,
               'value': '(30769230, 1000)'},
              283: {'code': 283,
               'count': 1,
               'dtype_name': 'RATIONAL',
               'name': 'YResolution',
               'dataformat': '2I',
               'valuebytecount': 8,
               'value': '(30769230, 1000)'},
              284: {'code': 284,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'PlanarConfiguration',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'PLANARCONFIG.CONTIG'},
              296: {'code': 296,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'ResolutionUnit',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'RESUNIT.CENTIMETER'},
              305: {'code': 305,
               'count': 22,
               'dtype_name': 'ASCII',
               'name': 'Software',
               'dataformat': '1s',
               'valuebytecount': 22,
               'value': 'OME Bio-Formats 6.3.1'},
              322: {'code': 322,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'TileWidth',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 1024},
              323: {'code': 323,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'TileLength',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 1024},
              324: {'code': 324,
               'count': 1404,
               'dtype_name': 'LONG8',
               'name': 'TileOffsets',
               'dataformat': '1Q',
               'valuebytecount': 11232,
               'value': 'LOTS OF STUFF'},
              325: {'code': 325,
               'count': 1404,
               'dtype_name': 'LONG8',
               'name': 'TileByteCounts',
               'dataformat': '1Q',
               'valuebytecount': 11232,
               'value': 'LOTS OF STUFF'},
              330: {'code': 330,
               'count': 6,
               'dtype_name': 'LONG8',
               'name': 'SubIFDs',
               'dataformat': '1Q',
               'valuebytecount': 48,
               'value': '(69929996380, 73834990338, 74950706936, 75269487694, 75349187940, 75389040730)'},
              339: {'code': 339,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'SampleFormat',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'SAMPLEFORMAT.UINT'}}},
            {'axes': 'YX',
             'chunked': ('26', '54'),
             'chunks': ('1_024', '1_024'),
             'compression': 'COMPRESSION.NONE',
             'colormap': {'ndim': 'undefined', 'nbytes': 'undefined'},
             'shape': ('26_523', '55_294'),
             'dtype': 'uint16',
             'imagedepth': 1,
             'imagelength': '26_523',
             'imagewidth': '55_294',
             'nbytes': '2_933_125_524',
             'tags': {256: {'code': 256,
               'count': 1,
               'dtype_name': 'LONG8',
               'name': 'ImageWidth',
               'dataformat': '1Q',
               'valuebytecount': 8,
               'value': 55294},
              257: {'code': 257,
               'count': 1,
               'dtype_name': 'LONG8',
               'name': 'ImageLength',
               'dataformat': '1Q',
               'valuebytecount': 8,
               'value': 26523},
              258: {'code': 258,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'BitsPerSample',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 16},
              259: {'code': 259,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'Compression',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'COMPRESSION.NONE'},
              262: {'code': 262,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'PhotometricInterpretation',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'PHOTOMETRIC.MINISBLACK'},
              270: {'code': 270,
               'count': 1,
               'dtype_name': 'ASCII',
               'name': 'ImageDescription',
               'dataformat': '1s',
               'valuebytecount': 1,
               'value': ''},
              277: {'code': 277,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'SamplesPerPixel',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 1},
              282: {'code': 282,
               'count': 1,
               'dtype_name': 'RATIONAL',
               'name': 'XResolution',
               'dataformat': '2I',
               'valuebytecount': 8,
               'value': '(30769230, 1000)'},
              283: {'code': 283,
               'count': 1,
               'dtype_name': 'RATIONAL',
               'name': 'YResolution',
               'dataformat': '2I',
               'valuebytecount': 8,
               'value': '(30769230, 1000)'},
              284: {'code': 284,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'PlanarConfiguration',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'PLANARCONFIG.CONTIG'},
              296: {'code': 296,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'ResolutionUnit',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'RESUNIT.CENTIMETER'},
              305: {'code': 305,
               'count': 22,
               'dtype_name': 'ASCII',
               'name': 'Software',
               'dataformat': '1s',
               'valuebytecount': 22,
               'value': 'OME Bio-Formats 6.3.1'},
              322: {'code': 322,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'TileWidth',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 1024},
              323: {'code': 323,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'TileLength',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 1024},
              324: {'code': 324,
               'count': 1404,
               'dtype_name': 'LONG8',
               'name': 'TileOffsets',
               'dataformat': '1Q',
               'valuebytecount': 11232,
               'value': 'LOTS OF STUFF'},
              325: {'code': 325,
               'count': 1404,
               'dtype_name': 'LONG8',
               'name': 'TileByteCounts',
               'dataformat': '1Q',
               'valuebytecount': 11232,
               'value': 'LOTS OF STUFF'},
              330: {'code': 330,
               'count': 6,
               'dtype_name': 'LONG8',
               'name': 'SubIFDs',
               'dataformat': '1Q',
               'valuebytecount': 48,
               'value': '(69930002334, 73834992244, 74950707722, 75269488160, 75349188310, 75389041068)'},
              339: {'code': 339,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'SampleFormat',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'SAMPLEFORMAT.UINT'}}},
            {'axes': 'YX',
             'chunked': ('26', '54'),
             'chunks': ('1_024', '1_024'),
             'compression': 'COMPRESSION.NONE',
             'colormap': {'ndim': 'undefined', 'nbytes': 'undefined'},
             'shape': ('26_523', '55_294'),
             'dtype': 'uint16',
             'imagedepth': 1,
             'imagelength': '26_523',
             'imagewidth': '55_294',
             'nbytes': '2_933_125_524',
             'tags': {256: {'code': 256,
               'count': 1,
               'dtype_name': 'LONG8',
               'name': 'ImageWidth',
               'dataformat': '1Q',
               'valuebytecount': 8,
               'value': 55294},
              257: {'code': 257,
               'count': 1,
               'dtype_name': 'LONG8',
               'name': 'ImageLength',
               'dataformat': '1Q',
               'valuebytecount': 8,
               'value': 26523},
              258: {'code': 258,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'BitsPerSample',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 16},
              259: {'code': 259,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'Compression',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'COMPRESSION.NONE'},
              262: {'code': 262,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'PhotometricInterpretation',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'PHOTOMETRIC.MINISBLACK'},
              270: {'code': 270,
               'count': 1,
               'dtype_name': 'ASCII',
               'name': 'ImageDescription',
               'dataformat': '1s',
               'valuebytecount': 1,
               'value': ''},
              277: {'code': 277,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'SamplesPerPixel',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 1},
              282: {'code': 282,
               'count': 1,
               'dtype_name': 'RATIONAL',
               'name': 'XResolution',
               'dataformat': '2I',
               'valuebytecount': 8,
               'value': '(30769230, 1000)'},
              283: {'code': 283,
               'count': 1,
               'dtype_name': 'RATIONAL',
               'name': 'YResolution',
               'dataformat': '2I',
               'valuebytecount': 8,
               'value': '(30769230, 1000)'},
              284: {'code': 284,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'PlanarConfiguration',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'PLANARCONFIG.CONTIG'},
              296: {'code': 296,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'ResolutionUnit',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'RESUNIT.CENTIMETER'},
              305: {'code': 305,
               'count': 22,
               'dtype_name': 'ASCII',
               'name': 'Software',
               'dataformat': '1s',
               'valuebytecount': 22,
               'value': 'OME Bio-Formats 6.3.1'},
              322: {'code': 322,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'TileWidth',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 1024},
              323: {'code': 323,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'TileLength',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 1024},
              324: {'code': 324,
               'count': 1404,
               'dtype_name': 'LONG8',
               'name': 'TileOffsets',
               'dataformat': '1Q',
               'valuebytecount': 11232,
               'value': 'LOTS OF STUFF'},
              325: {'code': 325,
               'count': 1404,
               'dtype_name': 'LONG8',
               'name': 'TileByteCounts',
               'dataformat': '1Q',
               'valuebytecount': 11232,
               'value': 'LOTS OF STUFF'},
              330: {'code': 330,
               'count': 6,
               'dtype_name': 'LONG8',
               'name': 'SubIFDs',
               'dataformat': '1Q',
               'valuebytecount': 48,
               'value': '(69930008288, 73834994150, 74950708508, 75269488626, 75349188680, 75389041406)'},
              339: {'code': 339,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'SampleFormat',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'SAMPLEFORMAT.UINT'}}},
            {'axes': 'YX',
             'chunked': ('26', '54'),
             'chunks': ('1_024', '1_024'),
             'compression': 'COMPRESSION.NONE',
             'colormap': {'ndim': 'undefined', 'nbytes': 'undefined'},
             'shape': ('26_523', '55_294'),
             'dtype': 'uint16',
             'imagedepth': 1,
             'imagelength': '26_523',
             'imagewidth': '55_294',
             'nbytes': '2_933_125_524',
             'tags': {256: {'code': 256,
               'count': 1,
               'dtype_name': 'LONG8',
               'name': 'ImageWidth',
               'dataformat': '1Q',
               'valuebytecount': 8,
               'value': 55294},
              257: {'code': 257,
               'count': 1,
               'dtype_name': 'LONG8',
               'name': 'ImageLength',
               'dataformat': '1Q',
               'valuebytecount': 8,
               'value': 26523},
              258: {'code': 258,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'BitsPerSample',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 16},
              259: {'code': 259,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'Compression',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'COMPRESSION.NONE'},
              262: {'code': 262,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'PhotometricInterpretation',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'PHOTOMETRIC.MINISBLACK'},
              270: {'code': 270,
               'count': 1,
               'dtype_name': 'ASCII',
               'name': 'ImageDescription',
               'dataformat': '1s',
               'valuebytecount': 1,
               'value': ''},
              277: {'code': 277,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'SamplesPerPixel',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 1},
              282: {'code': 282,
               'count': 1,
               'dtype_name': 'RATIONAL',
               'name': 'XResolution',
               'dataformat': '2I',
               'valuebytecount': 8,
               'value': '(30769230, 1000)'},
              283: {'code': 283,
               'count': 1,
               'dtype_name': 'RATIONAL',
               'name': 'YResolution',
               'dataformat': '2I',
               'valuebytecount': 8,
               'value': '(30769230, 1000)'},
              284: {'code': 284,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'PlanarConfiguration',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'PLANARCONFIG.CONTIG'},
              296: {'code': 296,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'ResolutionUnit',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'RESUNIT.CENTIMETER'},
              305: {'code': 305,
               'count': 22,
               'dtype_name': 'ASCII',
               'name': 'Software',
               'dataformat': '1s',
               'valuebytecount': 22,
               'value': 'OME Bio-Formats 6.3.1'},
              322: {'code': 322,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'TileWidth',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 1024},
              323: {'code': 323,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'TileLength',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 1024},
              324: {'code': 324,
               'count': 1404,
               'dtype_name': 'LONG8',
               'name': 'TileOffsets',
               'dataformat': '1Q',
               'valuebytecount': 11232,
               'value': 'LOTS OF STUFF'},
              325: {'code': 325,
               'count': 1404,
               'dtype_name': 'LONG8',
               'name': 'TileByteCounts',
               'dataformat': '1Q',
               'valuebytecount': 11232,
               'value': 'LOTS OF STUFF'},
              330: {'code': 330,
               'count': 6,
               'dtype_name': 'LONG8',
               'name': 'SubIFDs',
               'dataformat': '1Q',
               'valuebytecount': 48,
               'value': '(69930014242, 73834996056, 74950709294, 75269489092, 75349189050, 75389041744)'},
              339: {'code': 339,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'SampleFormat',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'SAMPLEFORMAT.UINT'}}},
            {'axes': 'YX',
             'chunked': ('26', '54'),
             'chunks': ('1_024', '1_024'),
             'compression': 'COMPRESSION.NONE',
             'colormap': {'ndim': 'undefined', 'nbytes': 'undefined'},
             'shape': ('26_523', '55_294'),
             'dtype': 'uint16',
             'imagedepth': 1,
             'imagelength': '26_523',
             'imagewidth': '55_294',
             'nbytes': '2_933_125_524',
             'tags': {256: {'code': 256,
               'count': 1,
               'dtype_name': 'LONG8',
               'name': 'ImageWidth',
               'dataformat': '1Q',
               'valuebytecount': 8,
               'value': 55294},
              257: {'code': 257,
               'count': 1,
               'dtype_name': 'LONG8',
               'name': 'ImageLength',
               'dataformat': '1Q',
               'valuebytecount': 8,
               'value': 26523},
              258: {'code': 258,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'BitsPerSample',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 16},
              259: {'code': 259,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'Compression',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'COMPRESSION.NONE'},
              262: {'code': 262,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'PhotometricInterpretation',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'PHOTOMETRIC.MINISBLACK'},
              270: {'code': 270,
               'count': 1,
               'dtype_name': 'ASCII',
               'name': 'ImageDescription',
               'dataformat': '1s',
               'valuebytecount': 1,
               'value': ''},
              277: {'code': 277,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'SamplesPerPixel',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 1},
              282: {'code': 282,
               'count': 1,
               'dtype_name': 'RATIONAL',
               'name': 'XResolution',
               'dataformat': '2I',
               'valuebytecount': 8,
               'value': '(30769230, 1000)'},
              283: {'code': 283,
               'count': 1,
               'dtype_name': 'RATIONAL',
               'name': 'YResolution',
               'dataformat': '2I',
               'valuebytecount': 8,
               'value': '(30769230, 1000)'},
              284: {'code': 284,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'PlanarConfiguration',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'PLANARCONFIG.CONTIG'},
              296: {'code': 296,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'ResolutionUnit',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'RESUNIT.CENTIMETER'},
              305: {'code': 305,
               'count': 22,
               'dtype_name': 'ASCII',
               'name': 'Software',
               'dataformat': '1s',
               'valuebytecount': 22,
               'value': 'OME Bio-Formats 6.3.1'},
              322: {'code': 322,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'TileWidth',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 1024},
              323: {'code': 323,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'TileLength',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 1024},
              324: {'code': 324,
               'count': 1404,
               'dtype_name': 'LONG8',
               'name': 'TileOffsets',
               'dataformat': '1Q',
               'valuebytecount': 11232,
               'value': 'LOTS OF STUFF'},
              325: {'code': 325,
               'count': 1404,
               'dtype_name': 'LONG8',
               'name': 'TileByteCounts',
               'dataformat': '1Q',
               'valuebytecount': 11232,
               'value': 'LOTS OF STUFF'},
              330: {'code': 330,
               'count': 6,
               'dtype_name': 'LONG8',
               'name': 'SubIFDs',
               'dataformat': '1Q',
               'valuebytecount': 48,
               'value': '(69930020196, 73834997962, 74950710080, 75269489558, 75349189420, 75389042082)'},
              339: {'code': 339,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'SampleFormat',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'SAMPLEFORMAT.UINT'}}},
            {'axes': 'YX',
             'chunked': ('26', '54'),
             'chunks': ('1_024', '1_024'),
             'compression': 'COMPRESSION.NONE',
             'colormap': {'ndim': 'undefined', 'nbytes': 'undefined'},
             'shape': ('26_523', '55_294'),
             'dtype': 'uint16',
             'imagedepth': 1,
             'imagelength': '26_523',
             'imagewidth': '55_294',
             'nbytes': '2_933_125_524',
             'tags': {256: {'code': 256,
               'count': 1,
               'dtype_name': 'LONG8',
               'name': 'ImageWidth',
               'dataformat': '1Q',
               'valuebytecount': 8,
               'value': 55294},
              257: {'code': 257,
               'count': 1,
               'dtype_name': 'LONG8',
               'name': 'ImageLength',
               'dataformat': '1Q',
               'valuebytecount': 8,
               'value': 26523},
              258: {'code': 258,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'BitsPerSample',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 16},
              259: {'code': 259,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'Compression',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'COMPRESSION.NONE'},
              262: {'code': 262,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'PhotometricInterpretation',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'PHOTOMETRIC.MINISBLACK'},
              270: {'code': 270,
               'count': 1,
               'dtype_name': 'ASCII',
               'name': 'ImageDescription',
               'dataformat': '1s',
               'valuebytecount': 1,
               'value': ''},
              277: {'code': 277,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'SamplesPerPixel',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 1},
              282: {'code': 282,
               'count': 1,
               'dtype_name': 'RATIONAL',
               'name': 'XResolution',
               'dataformat': '2I',
               'valuebytecount': 8,
               'value': '(30769230, 1000)'},
              283: {'code': 283,
               'count': 1,
               'dtype_name': 'RATIONAL',
               'name': 'YResolution',
               'dataformat': '2I',
               'valuebytecount': 8,
               'value': '(30769230, 1000)'},
              284: {'code': 284,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'PlanarConfiguration',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'PLANARCONFIG.CONTIG'},
              296: {'code': 296,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'ResolutionUnit',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'RESUNIT.CENTIMETER'},
              305: {'code': 305,
               'count': 22,
               'dtype_name': 'ASCII',
               'name': 'Software',
               'dataformat': '1s',
               'valuebytecount': 22,
               'value': 'OME Bio-Formats 6.3.1'},
              322: {'code': 322,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'TileWidth',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 1024},
              323: {'code': 323,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'TileLength',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 1024},
              324: {'code': 324,
               'count': 1404,
               'dtype_name': 'LONG8',
               'name': 'TileOffsets',
               'dataformat': '1Q',
               'valuebytecount': 11232,
               'value': 'LOTS OF STUFF'},
              325: {'code': 325,
               'count': 1404,
               'dtype_name': 'LONG8',
               'name': 'TileByteCounts',
               'dataformat': '1Q',
               'valuebytecount': 11232,
               'value': 'LOTS OF STUFF'},
              330: {'code': 330,
               'count': 6,
               'dtype_name': 'LONG8',
               'name': 'SubIFDs',
               'dataformat': '1Q',
               'valuebytecount': 48,
               'value': '(69930026150, 73834999868, 74950710866, 75269490024, 75349189790, 75389042420)'},
              339: {'code': 339,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'SampleFormat',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'SAMPLEFORMAT.UINT'}}},
            {'axes': 'YX',
             'chunked': ('26', '54'),
             'chunks': ('1_024', '1_024'),
             'compression': 'COMPRESSION.NONE',
             'colormap': {'ndim': 'undefined', 'nbytes': 'undefined'},
             'shape': ('26_523', '55_294'),
             'dtype': 'uint16',
             'imagedepth': 1,
             'imagelength': '26_523',
             'imagewidth': '55_294',
             'nbytes': '2_933_125_524',
             'tags': {256: {'code': 256,
               'count': 1,
               'dtype_name': 'LONG8',
               'name': 'ImageWidth',
               'dataformat': '1Q',
               'valuebytecount': 8,
               'value': 55294},
              257: {'code': 257,
               'count': 1,
               'dtype_name': 'LONG8',
               'name': 'ImageLength',
               'dataformat': '1Q',
               'valuebytecount': 8,
               'value': 26523},
              258: {'code': 258,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'BitsPerSample',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 16},
              259: {'code': 259,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'Compression',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'COMPRESSION.NONE'},
              262: {'code': 262,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'PhotometricInterpretation',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'PHOTOMETRIC.MINISBLACK'},
              270: {'code': 270,
               'count': 1,
               'dtype_name': 'ASCII',
               'name': 'ImageDescription',
               'dataformat': '1s',
               'valuebytecount': 1,
               'value': ''},
              277: {'code': 277,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'SamplesPerPixel',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 1},
              282: {'code': 282,
               'count': 1,
               'dtype_name': 'RATIONAL',
               'name': 'XResolution',
               'dataformat': '2I',
               'valuebytecount': 8,
               'value': '(30769230, 1000)'},
              283: {'code': 283,
               'count': 1,
               'dtype_name': 'RATIONAL',
               'name': 'YResolution',
               'dataformat': '2I',
               'valuebytecount': 8,
               'value': '(30769230, 1000)'},
              284: {'code': 284,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'PlanarConfiguration',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'PLANARCONFIG.CONTIG'},
              296: {'code': 296,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'ResolutionUnit',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'RESUNIT.CENTIMETER'},
              305: {'code': 305,
               'count': 22,
               'dtype_name': 'ASCII',
               'name': 'Software',
               'dataformat': '1s',
               'valuebytecount': 22,
               'value': 'OME Bio-Formats 6.3.1'},
              322: {'code': 322,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'TileWidth',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 1024},
              323: {'code': 323,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'TileLength',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 1024},
              324: {'code': 324,
               'count': 1404,
               'dtype_name': 'LONG8',
               'name': 'TileOffsets',
               'dataformat': '1Q',
               'valuebytecount': 11232,
               'value': 'LOTS OF STUFF'},
              325: {'code': 325,
               'count': 1404,
               'dtype_name': 'LONG8',
               'name': 'TileByteCounts',
               'dataformat': '1Q',
               'valuebytecount': 11232,
               'value': 'LOTS OF STUFF'},
              330: {'code': 330,
               'count': 6,
               'dtype_name': 'LONG8',
               'name': 'SubIFDs',
               'dataformat': '1Q',
               'valuebytecount': 48,
               'value': '(69930032104, 73835001774, 74950711652, 75269490490, 75349190160, 75389042758)'},
              339: {'code': 339,
               'count': 1,
               'dtype_name': 'SHORT',
               'name': 'SampleFormat',
               'dataformat': '1H',
               'valuebytecount': 2,
               'value': 'SAMPLEFORMAT.UINT'}}}]}
code cell 11:
  execution_count: 16
  source:
    with open(f"{FNAME}.json", "w") as outfile: 
        json.dump(metadata, outfile)
code cell 12:
  execution_count: 13
  metadata (unknown keys):
    colab:
      base_uri: https://localhost:8080/
    executionInfo:
      elapsed: 278
      status: ok
      timestamp: 1665062143564
      user:
        displayName: Nodar Gogoberidze
        userId: 18246272351588062984
      user_tz: 300
    id: _59C-nKM4s38
    outputId: b1ef92fd-ed64-4360-ffb1-d85c090a62e9
  source:
    skio.find_available_plugins()
  outputs:
    output 0:
      output_type: execute_result
      execution_count: 13
      data:
        text/plain:
          {'imread': ['imread', 'imsave', 'imread_collection'],
           'gdal': ['imread', 'imread_collection'],
           'simpleitk': ['imread', 'imsave', 'imread_collection'],
           'pil': ['imread', 'imsave', 'imread_collection'],
           'fits': ['imread', 'imread_collection'],
           'matplotlib': ['imshow', 'imread', 'imshow_collection', 'imread_collection'],
           'tifffile': ['imread', 'imsave', 'imread_collection'],
           'imageio': ['imread', 'imsave', 'imread_collection']}
code cell 13:
  execution_count: 14
  source:
    def print_im_info(im, h_idx=0, w_idx=1, c_idx=2, f_name=None, b_before=None, b_after=None):
        if f_name:
            print(f"Image from file {f_name}")
        print(f"Image shape: {im.shape}")
        print(f"Image height: {im.shape[h_idx]}")
        print(f"Image width: {im.shape[w_idx]}")
        if len(im.shape) > 2:
            print(f"Image channels: {im.shape[c_idx]}")
        else:
            print(f"Image is grayscale (no channel dim)")
        print(f"Image file name: {f_name}")
        if f_name:
            print(f"Image file size (GB): {toGB(os.path.getsize(f_name)): 0.2f}")
        if b_before and b_after:
            print(f"Image mem size (GB): {toGB(b_after - b_before): 0.2f}")
    
    def open_with_plugin(file_name, plugin_name):
        b_before = B()
        im = skio.imread(file_name, plugin=plugin_name)
        b_after = B()
        return im, b_before, b_after
markdown cell 14:
  source:
    `tifffile` is default.
    
    At beginning of Large Image Support [imread](https://github.com/luispedro/imread), [GDAL](http://www.gdal.org/), [simpleitk](http://simpleitk.org/), [fits (astropy)](https://www.astropy.org) plugins are not available, and `pil` (pillow), and `matplotlib` faile because of image too large error: "Image size (454326600 pixels) exceeds limit of 178956970 pixels, could be decompression bomb DOS attack."
    
    `imread` refers to `mahotas-imread` a separate library from `mahotas` from the same developer built after "frustrations" with existing solutions including `scikit-image` (I guess before it was a plugin there). What those "frustrations" are are not elucidated. May be worth switching from default `imageio` tiff reader to `imread`. Its only dependency is `numpy`. The PyPI build only has linux wheels, so users will have to compile it or use `conda` which is maybe bad if there is a `pip install numpy` in the `conda` environment because it will replace the version despite the fact that `imread` doesn't specify a specific version of `numpy`. Also when using `imread` on `454MP.tif` we get a 4 `TIFFReadDirectory: Unknown field with tag <tag no> (<tag hex>) encountered` warnings, after which it does successfully complete. Not sure if those warnings are specific to `imread` or that `imread` is the only one that bothers reporting. I did inspect with `tifffile` and they were indeed esoteric tags, e.g. `RATING`, `XPCOMMENT`, etc. It also failed to read `a.ome.tif` because of the error: `Can not read scanlines from a tiled image`. That does not seem to be a problem with `tifffile` and `imageio` which both seemed to read the file just fine.
    
    GDAL is a translator library for raster and vector geospatial data formats. Out of scope.
    
    SimpleITK is from Insight Segmentation and Registration Toolkit (ITK) and so probably a great image reader (20 formats supported), but also has image registration, classic segmentation, measurements on ROIs, multiprocessing. SimpleITK does not mean "A simpler/smaller version of ITK" but rather "A simple interface (written in C++) built **on top of** ITK" which has wrappers in many languages, including Python. We have to evaluate heavily if it is right for us given its such a large dependency (or perhaps worse an even harder "install CellProfiler from source" for users). It may prove very helpful for large image support, given its parrallelization capabilities + measurements. We know measurments are going to be particularly painful for large images. 
    
    Astropy is an astronomy package. [`astropy.io.fits`](https://docs.astropy.org/en/stable/io/fits/) provides access to `FITS` files (Flexible Image Transport System) originally developed by [PyFits](https://pyfits.readthedocs.io/en/latest/). Out of scope.
    
    `matplotlib`'s `imread` just dispatches to `PIL.Image.open`, and we don't care about using Pillow for image reading.
    
    Not a `scikit-iamge` plugin but there is also [libtiff](https://pypi.org/project/libtiff/).
    
    There is also [`pims`](https://pypi.org/project/PIMS/), which is what `dask-image` uses. It also wraps Bioformats via `jpype`, dynamically installs the jar, etc. May serve as a good replacement for `scyjava` as well.
    
    [ImageJ memory issue troubleshooting](https://imagej.net/learn/troubleshooting#negativearraysizeexception)
code cell 15:
  execution_count: 15
  source:
    x = open_with_plugin(FNAME, 'tifffile')
  outputs:
    output 0:
      output_type: error
      ename: KeyboardInterrupt
      traceback:
        item[0]: ---------------------------------------------------------------------------
        item[1]: KeyboardInterrupt                         Traceback (most recent call last)
        item[2]:
          /var/folders/_h/pstxjwl508x7kqfk_cr8cf740000gq/T/ipykernel_63010/3203948635.py in ?()
          ----> 1 x = open_with_plugin(FNAME, 'tifffile')
          
        item[3]:
          /var/folders/_h/pstxjwl508x7kqfk_cr8cf740000gq/T/ipykernel_63010/2156357904.py in ?(file_name, plugin_name)
               17 def open_with_plugin(file_name, plugin_name):
               18     b_before = B()
          ---> 19     im = skio.imread(file_name, plugin=plugin_name)
               20     b_after = B()
               21     return im, b_before, b_after
        item[4]:
          ~/Developer/CellProfiler/CellProfiler/.pixi/envs/hack/lib/python3.9/site-packages/skimage/io/_io.py in ?(fname, as_gray, plugin, **plugin_args)
               56         if fname.lower().endswith(('.tiff', '.tif')):
               57             plugin = 'tifffile'
               58 
               59     with file_or_url_context(fname) as fname:
          ---> 60         img = call_plugin('imread', fname, plugin=plugin, **plugin_args)
               61 
               62     if not hasattr(img, 'ndim'):
               63         return img
        item[5]:
          ~/Developer/CellProfiler/CellProfiler/.pixi/envs/hack/lib/python3.9/site-packages/skimage/io/manage_plugins.py in ?(kind, *args, **kwargs)
              213             func = [f for (p, f) in plugin_funcs if p == plugin][0]
              214         except IndexError:
              215             raise RuntimeError(f'Could not find the plugin "{plugin}" for {kind}.')
              216 
          --> 217     return func(*args, **kwargs)
          
        item[6]:
          ~/Developer/CellProfiler/CellProfiler/.pixi/envs/hack/lib/python3.9/site-packages/skimage/io/_plugins/tifffile_plugin.py in ?(fname, **kwargs)
               70     """
               71     if 'img_num' in kwargs:
               72         kwargs['key'] = kwargs.pop('img_num')
               73 
          ---> 74     return tifffile_imread(fname, **kwargs)
          
        item[7]:
          ~/Developer/CellProfiler/CellProfiler/.pixi/envs/hack/lib/python3.9/site-packages/tifffile/tifffile.py in ?(***failed resolving arguments***)
             1269                     )
             1270                     if selection is None:
             1271                         return store
             1272                     return zarr_selection(store, selection, out=out)
          -> 1273                 return tif.asarray(
             1274                     key=key,
             1275                     series=series,
             1276                     level=level,
        item[8]:
          ~/Developer/CellProfiler/CellProfiler/.pixi/envs/hack/lib/python3.9/site-packages/tifffile/tifffile.py in ?(self, key, series, level, squeeze, out, maxworkers, buffersize)
             4532             result = page0.asarray(
             4533                 out=out, maxworkers=maxworkers, buffersize=buffersize
             4534             )
             4535         else:
          -> 4536             result = stack_pages(
             4537                 pages, out=out, maxworkers=maxworkers, buffersize=buffersize
             4538             )
             4539 
        item[9]:
          ~/Developer/CellProfiler/CellProfiler/.pixi/envs/hack/lib/python3.9/site-packages/tifffile/tifffile.py in ?(pages, tiled, lock, maxworkers, out, **kwargs)
            23268                 filecache.close(page.parent.filehandle)
            23269 
            23270         if maxworkers < 2:
            23271             for index, page in enumerate(pages):
          > 23272                 func(page, index)
            23273         else:
            23274             page0.decode  # init TiffPage.decode function
            23275             with ThreadPoolExecutor(maxworkers) as executor:
        item[10]:
          ~/Developer/CellProfiler/CellProfiler/.pixi/envs/hack/lib/python3.9/site-packages/tifffile/tifffile.py in ?(page, index, out, filecache, kwargs)
            23263         ) -> None:
            23264             # read, decode, and copy page data
            23265             if page is not None:
            23266                 filecache.open(page.parent.filehandle)
          > 23267                 page.asarray(lock=lock, out=out[index], **kwargs)
            23268                 filecache.close(page.parent.filehandle)
        item[11]:
          ~/Developer/CellProfiler/CellProfiler/.pixi/envs/hack/lib/python3.9/site-packages/tifffile/tifffile.py in ?(self, out, squeeze, lock, maxworkers, buffersize)
             9467                     ]
             9468                 # except IndexError:
             9469                 #     pass  # corrupted file, for example, with too many strips
             9470 
          -> 9471             for _ in self.segments(
             9472                 func=func,
             9473                 lock=lock,
             9474                 maxworkers=maxworkers,
        item[12]:
          ~/Developer/CellProfiler/CellProfiler/.pixi/envs/hack/lib/python3.9/site-packages/tifffile/tifffile.py in ?(self, lock, maxworkers, func, sort, buffersize, _fullsize)
             9277                     sort=sort,
             9278                     buffersize=buffersize,
             9279                     flat=False,
             9280                 ):
          -> 9281                     yield from executor.map(decode, segments)
          
        item[13]: KeyboardInterrupt: 
code cell 16:
  execution_count: 24
  source:
    x[0].max()
  outputs:
    output 0:
      output_type: execute_result
      execution_count: 24
      data:
        text/plain: 4294967295
code cell 17:
  execution_count: 27
  source:
    x[0].dtype
  outputs:
    output 0:
      output_type: execute_result
      execution_count: 27
      data:
        text/plain: dtype('uint32')
code cell 18:
  execution_count: 15
  source:
    for plug in list(skio.find_available_plugins().keys()):
        print(f">>> Trying plugin {plug}")
        try:
            im, b_before, b_after = open_with_plugin(FNAME, plug)
            print_im_info(im, h_idx=0, w_idx=1, c_idx=2, f_name=FNAME, b_before=b_before, b_after=b_after)
            del im
        except Exception as e:
            print(e)
  outputs:
    output 0:
      output_type: stream
      name: stdout
      text:
        >>> Trying plugin imread
        Imread could not be foundPlease refer to http://pypi.python.org/pypi/imread/ for further instructions.
        >>> Trying plugin gdal
        The GDAL Library could not be found. Please refer to http://www.gdal.org/ for further instructions.
        >>> Trying plugin simpleitk
        SimpleITK could not be found. Please try   easy_install SimpleITK or refer to   http://simpleitk.org/ for further instructions.
        >>> Trying plugin pil
        Image from file /Users/ngogober/Downloads/_001.nd2_DAPI_SUM.tif - Copy.tif
        Image shape: (2048, 2048)
        Image height: 2048
        Image width: 2048
        Image is grayscale (no channel dim)
        Image file name: /Users/ngogober/Downloads/_001.nd2_DAPI_SUM.tif - Copy.tif
        Image file size (GB):  0.02
        Image mem size (GB):  0.07
        >>> Trying plugin fits
        Astropy could not be found. It is needed to read FITS files.
        Please refer to https://www.astropy.org for installation
        instructions.
        >>> Trying plugin matplotlib
        Image from file /Users/ngogober/Downloads/_001.nd2_DAPI_SUM.tif - Copy.tif
        Image shape: (2048, 2048, 4)
        Image height: 2048
        Image width: 2048
        Image channels: 4
        Image file name: /Users/ngogober/Downloads/_001.nd2_DAPI_SUM.tif - Copy.tif
        Image file size (GB):  0.02
        Image mem size (GB):  0.03
        >>> Trying plugin tifffile
        Image from file /Users/ngogober/Downloads/_001.nd2_DAPI_SUM.tif - Copy.tif
        Image shape: (2048, 2048)
        Image height: 2048
        Image width: 2048
        Image is grayscale (no channel dim)
        Image file name: /Users/ngogober/Downloads/_001.nd2_DAPI_SUM.tif - Copy.tif
        Image file size (GB):  0.02
        Image mem size (GB):  0.00
        >>> Trying plugin imageio
        Image from file /Users/ngogober/Downloads/_001.nd2_DAPI_SUM.tif - Copy.tif
        Image shape: (2048, 2048)
        Image height: 2048
        Image width: 2048
        Image is grayscale (no channel dim)
        Image file name: /Users/ngogober/Downloads/_001.nd2_DAPI_SUM.tif - Copy.tif
        Image file size (GB):  0.02
        Image mem size (GB):  0.00
markdown cell 19:
  source:
    ## Write TIFFs
code cell 20:
  execution_count: 314
  source:
    def generate_sparse_matrix(shape, density, bit_depth=8, random_seed=None, format='coo'):
        if bit_depth not in [8, 16]:
            raise ValueError("bit_depth must be 8 or 16")
        if not (density >= 0 and density <= 1):
            raise ValueError("density must be between 0 and 1")
        if not len(shape) == 2:
            raise ValueError("shape must be a 2-tuple")
        
        if bit_depth == 8:
            dtype = np.uint8
        elif bit_depth == 16:
            dtype = np.uint16
    
        low = 0
        high = 2**bit_depth
    
        rng = np.random.default_rng(random_seed)
    
        def sample_me(size, low=low, high=high, rng=rng, dtype=dtype):
            return rng.integers(size=size, low=low, high=high, dtype=dtype)
    
        return sp.sparse.random(shape[0], shape[1], density=density, random_state=rng, data_rvs=sample_me, dtype=dtype, format=format)
    
    def find_closest_factors(n):
        sqrt_n = int(n ** 0.5)
        while n % sqrt_n != 0:
            sqrt_n -= 1
        return sqrt_n, int(n // sqrt_n)
    
    def num_pixels_to_arr(num_pixels, *args, **kwargs):
        # make as square as possible
        height, width = find_closest_factors(num_pixels)
        mtx = generate_sparse_matrix((height, width), *args, **kwargs)
        return mtx
code cell 21:
  execution_count: 321
  source:
    num_pixels_to_arr(1000, 0.5).dtype
  outputs:
    output 0:
      output_type: execute_result
      execution_count: 321
      data:
        text/plain: dtype('uint8')
markdown cell 22:
  source:
    ## Large Image Viewing
markdown cell 23:
  source:
    Some dask for imaging resources:
    - [napari-dask with dask delayed and dask-image](https://napari.org/stable/tutorials/processing/dask.html): for lazy loading and analysis of images
    - [load large images with dask and dask array](https://blog.dask.org/2019/06/20/load-image-data)
    - [dask and itk for large scale image analysis](https://blog.dask.org/2019/08/09/image-itk)
markdown cell 24:
  source:
    ### Notes on changes to CellProfiler:
    
    We will need to add a checkbox next to images, that allows the user to only use the first image as a reference for dimensions, channel order, shape, etc. instead of reading all of them from disk.
    
    Either that or we will have to read them one at a time, and "release" the memory between each.
